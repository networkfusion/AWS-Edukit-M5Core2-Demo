# Copyright (c) NetworkFusion, .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

# This workflow will build and test the sln without a hardware target.

name: hosted-windows build test

on: [push, pull_request]

defaults:
  run:
    shell: pwsh
    
jobs:
  build-solution:
    name: Build nanoFramework solution
    timeout-minutes: 15
    runs-on: windows-latest
    env:
      solution: 'AwsEdukitM5Core2.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install build components for nanoFramework
        uses: nanoframework/nanobuild@v1

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64
          vs-version: 17.0

      - name: Install NuGet client
        uses: nuget/setup-nuget@v1

      - name: Restore nuget packages
        run: nuget restore ${{ env.solution }} -ConfigFile NuGet.Config

      # Adjust secrets to add SSID and PW using defaults from the template (as doesnt need real ones)
      - name: Use Secrets class template for tests
        run: Copy-Item './AwsEdukitM5Core2/Secrets.cs.template' -Destination './AwsEdukitM5Core2/Secrets.cs'

      - name: Build App
        run: msbuild ${{ env.solution }} /p:Configuration=${{ env.buildConfiguration }}

      - name: Run tests
        uses: microsoft/vstest-action@v0.1.0
        if: always()
        with:
          testAssembly: |
            **\NFUnitTest.dll
            **\*Test*.dll
            !**\obj\**
            !**\TestAdapter\**
            !**\NFUnitTest_DummyAdapter\**
            !**\nanoFramework.TestFramework\**
          searchFolder: ${{ github.workspace }}
          platform: ${{ env.BuildPlatform }}
          # vsTestVersion: 'latest'
          codeCoverageEnabled: false # TODO: using this will throw an exception...
          runSettingsFile: './Tests/IntegrationTests/nano.runsettings'

      - name: Convert Test Report
        uses: dorny/test-reporter@v1 # need to find a better action as a bit stale!
        if: always()    # run this step even if previous step failed
        with:
          name: Test Results
          path: ./**/TestResults/*.trx
          reporter: 'dotnet-trx'
          fail-on-error: false
